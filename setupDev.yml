---
- name: Install dependencies
  hosts: localhost
  connection: local
  vars_files:
    - config.yml
  
  tasks:
  - name: load submodules in dev mode
    shell: >
      git submodule init && git submodule update 
      && pushd tempest-fork/ && git checkout no_admin_creds && git pull && popd 
      && pushd python-tempestconf/ && git checkout master && git pull && popd 
      && pushd HealthMonitorTempestPlugin/ && git checkout main && git pull && popd
    when: 
      - dev is defined
      - dev 
      

- name: Canary Setup
  hosts: localhost
  become: yes
  become_method: sudo
  connection: local
  vars_files:
    - config.yml
  
  tasks:
  - name: Set OS cloud facts
    set_fact:
      os_username: "{{ os_username | default(lookup('env','OS_USERNAME'),true) }}"
      os_password: "{{ os_password | default(lookup('env','OS_PASSWORD'),true) }}"
      os_auth_url: "{{ os_auth_url | default(lookup('env','OS_AUTH_URL'),true) }}"
      os_project_domain_name: "{{ os_project_domain_name | default(lookup('env','OS_PROJECT_DOMAIN_NAME'),true) }}"
      os_project_domain_id: "{{ os_project_domain_id | default(lookup('env','OS_PROJECT_DOMAIN_ID'),true) }}"
      os_user_domain_name: "{{  os_user_domain_name | default(lookup('env','OS_USER_DOMAIN_NAME'),true)  }}"
      os_user_domain_id: "{{  os_user_domain_id | default(lookup('env','OS_USER_DOMAIN_ID'),true)  }}"
      os_project_name: "{{ os_project_name | default(lookup('env','OS_PROJECT_NAME'), true) }}"
      os_project_id: "{{ os_project_id | default(lookup('env','OS_PROJECT_ID'),true) }}"
      os_tenant_name: "{{ os_tenant_name | default(lookup('env','OS_TENANT_NAME'),true) }}"
      os_tenant_id: "{{ os_tenant_id | default(lookup('env','OS_TENANT_ID'),true) }}"
      os_interface: "{{ os_interface | default(lookup('env','OS_INTERFACE'),true) }}"
      os_endpoint_type: "{{ os_endpoint_type | default(lookup('env','OS_ENDPOINT_TYPE'),true) }}"
      os_identity_api_version : "{{ os_identity_api_version | default(lookup('env','OS_IDENTITY_API_VERSION'),true) }}"
      os_region_name: "{{ os_region_name | default(lookup('env','OS_REGION_NAME'),true) }}"
      os_auth_plugin: "{{ os_auth_plugin | default(lookup('env','OS_AUTH_PLUGIN'),true) }}"
  
  - name: Check minimum definitions exist
    assert:
      that:
        - pub_net_id is defined
        - pub_net_id |length
        - os_username |length
        - os_password |length
        - os_auth_url |length
      fail_msg: "Some or all of the required configuration parameters were not provided. Please source an OS RC file and/or edit 'config.yml'."

  - name: Configure tempest
    shell: >  
      source venv/bin/activate && cd venv/clouddev && discover-tempest-config 
      --out etc/tempest.conf --non-admin 
      --os-username {{ os_username }}
      --os-password {{ os_password }}
      --os-auth-url {{ os_auth_url }} 
      {% if os_project_domain_name |length %}
      --os-project-domain-name {{ os_project_domain_name }}
      {% endif %}
      {% if os_project_domain_id |length %}
      --os-project-domain-id {{ os_project_domain_id }}
      {% endif %}
      {% if os_user_domain_name |length %}
      --os-user-domain-name {{ os_user_domain_name }} 
      {% endif %}
      {% if os_user_domain_id |length %}
      --os-user-domain-id {{ os_user_domain_id }}
      {% endif %}
      {% if os_project_name |length %}
      --os-project-name {{ os_project_name }}
      {% endif %}
      {% if os_project_id |length %}
      --os-project-id {{ os_project_id }}
      {% endif %}
      {% if os_tenant_name |length %}
      --os-tenant-name {{ os_tenant_name }}
      {% endif %}
      {% if os_tenant_id |length %}
      --os-tenant-id {{ os_tenant_id }}
      {% endif %}
      {% if os_interface |length %}
      --os-interface {{ os_interface }}
      {% endif %}
      {% if os_endpoint_type |length %}
      --os-endpoint-override {{ os_endpoint_type }}
      {% endif %}
      {% if os_identity_api_version |length %}
      --os-api-version {{ os_identity_api_version }}
      {% endif %}
      {% if os_region_name |length %}
      --os-region-name {{ os_region_name }} 
      {% endif %}
      {% if os_auth_plugin |length %}
      --os-auth-plugin {{ os_auth_plugin }} 
      {% endif %}
      {% if floating_ips is defined and floating_ips %}
      network-feature-enabled.floating_ips {{ floating_ips }}
      {% endif %}
      {% if floating_net_id is defined and floating_net_id|length %}
      network.floating_network_name {{ floating_net_id }}
      {% endif %}
      auth.test_accounts_file etc/accounts.yml
      network.public_network_id {{ pub_net_id }}

  - name: Append tempest.conf with health monitor section header
    lineinfile:
      path: ./venv/clouddev/etc/tempest.conf
      line: "[healthmon]"

  - name: Append tempest.conf with test config
    blockinfile: 
      path: ./venv/clouddev/etc/tempest.conf
      block: |
        image = {{ item.0 }}
        ssh_user = {{ item.1 }}
        flavor = {{ item.2 }}
      marker: "# {mark} ANSIBLE MANAGED BLOCK - CONFIG {{idx+1}}"
    loop: "{{ images | zip(ssh_users, flavors) | list }}"
    loop_control:
      index_var: idx
  - name: Append tempest.conf with test config - alternative config
    blockinfile: 
      path: ./venv/clouddev/etc/tempest.conf
      block: |
        image_alt = {{ item.0 }}
        ssh_user_alt = {{ item.1 }}
        flavor_alt = {{ item.2 }}
      marker: "# {mark} ANSIBLE MANAGED BLOCK - ALT CONFIG {{idx+1}}"
    loop: "{{ images_alt | zip(ssh_users_alt, flavors_alt) | list }}"
    loop_control:
      index_var: idx
    when: 
      - images_alt is defined
      - ssh_users_alt is defined
      - flavors_alt is defined
  
  - name: Configure accounts.yml
    blockinfile:
      path: ./venv/clouddev/etc/accounts.yml
      block: |
        - username: '{{ os_username | default(lookup('env','OS_USERNAME'),true) }}'
          tenant_name: '{{ os_project_name | default(lookup('env','OS_PROJECT_NAME'),true) }}'
          password: '{{ os_password | default(lookup('env','OS_PASSWORD'),true) }}'